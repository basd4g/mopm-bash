#!/bin/bash -e
function error() {
  echo -e "$*" 1>&2
  exit 1
}

function lint() {
  error_message=""
  target_file=$1

  if ! grep -q -E "^# mopm-url: https?://" $target_file; then
    error_message+="The line 'mopm-url' is not found or invalid..\n"
  fi
  if ! grep -q -E "^# mopm-description: " $target_file; then
    error_message+="The line 'mopm-description' is not found\n"
  fi
  if ! grep -q -E "^# mopm-dependencies: (([a-z0-9-]+, )*[a-z0-9-]+)?$" $target_file; then
    error_message+="The line 'mopm-dependencies' is not found or invalid..\n"
  fi
  if ! grep -q -E "^# mopm-verification: " $target_file; then
    error_message+="The line 'mopm-verification' is not found\n"
  fi

  if [ -n "$error_message" ]; then
    error $error_message
  fi
}

function search() {
  package_name=$1
  definition_file="definitions/`arch`/`uname`/$package_name"
  if ! [ -e "$definition_file" ]; then
    error "The package '$package_name' is not found"
  fi
  grep -E "^# mopm-url: https?://" $definition_file
  grep -E "^# mopm-description: " $definition_file
  grep -E "^# mopm-dependencies: (([a-z0-9-]+, )*[a-z0-9-]+)?$" $definition_file
  grep -E "^# mopm-verification: " $definition_file
}

function verify() {
  package_name=$1
  definition_file="definitions/`arch`/`uname`/$package_name"
  if ! [ -e "$definition_file" ]; then
    error "The package '$package_name' is not found"
  fi
  verify_command=$(grep -E "^# mopm-verification: " $definition_file | sed 's/^# mopm-verification//')
  if ! $verify_command > /dev/null 2>&1; then
    exit 1
  fi
}

function update() {
  github_user="basd4g"
  github_repo="mopm-bash"
  mopm_repos_dir="${HOME}/.mopm-bash/repos"
  mopm_repos_user_dir="${mopm_repos_dir}/github.com/${github_user}"
  mopm_repos_user_repo_dir="{$mopm_repos_user_dir}/${github_repo}"

  if find "${mopm_repos_user_repo_dir}" -type d ; then
    cd "${mopm_repos_user_repo_dir}"
    git pull -f origin master
    echo "Updated"
  else
    mkdir -p "${mopm_repos_user_dir}"
    cd "${mopm_repos_user_dir}"
    git clone "https://github.com/${github_user}/${github_repo}.git"
  fi
}

if [ $1 = 'lint' ]; then
  lint $2
elif [ $1 = 'search' ]; then
  search $2
elif [ $1 = 'verify' ]; then
  verify $2
elif [ $1 = 'update' ]; then
  update $2
fi
